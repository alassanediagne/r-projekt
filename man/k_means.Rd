% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/k-means.R
\name{k_means}
\alias{k_means}
\title{k-Means-Algorithmus}
\usage{
k_means(
  data,
  num_cluster,
  m0 = NULL,
  save_history = FALSE,
  return_labels = FALSE,
  max_iter = 50L,
  tol = 1e-08,
  verbose = FALSE
)
}
\arguments{
\item{data}{Matrix mit Daten die geclustered werden sollen. Jede Zeile enthaelt einen Messwert in R^d}

\item{num_cluster}{int. Anzahl der Cluster}

\item{m0}{(optional) Matrix mit Anfangswerten zur Initialisierung des Algorithmus. Falls nicht angegeben werden die Startwerte automatisch gewaehlt}

\item{save_history}{(optional) logical. Gibt Cluster-Mittelpunkte und Labels in jeder Iteration zurueck. Default: FALSE}

\item{return_labels}{(optional) logical. Gibt zu jedem Messwert das Clusterlabel zurueck. Default: FALSE}

\item{max_iter}{(optinal) int. Legt maximale Anzahl an Iterationen fest. Default: 50}

\item{tol}{(optinal) float. Toleranz zur Festlegung der Konvergenz. Default: 1e-8}

\item{verbose}{(optional) logical. Falls TRUE wird die Anzahl der Iterationen und Konvergenz als Nachricht ausgegeben}
}
\value{
Liste mit Konvergenz logical, Anzahl an Iterationen, Clustermittelpunkten, sowie, falls erwuenscht Labels, einzelnen Iterationen und Nachricht
}
\description{
Implementierung des k-Means-Algorithmus aus Richter mit zusaetzlich automatischer Startwertwahl
}
\examples{
data <- gen_clusters(50, matrix(c(0,1,2,1,0,1,2,0),ncol=2), 0.3)
k_means(data,4)
data <- gen_clusters(100, matrix(c(0,0,1,1,1,0,0,1), ncol=2),0.3)
plot_k_means_2d(data,4)

}
